<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nju.nowcode.mapper.MessageMapper">
  <resultMap id="BaseResultMap" type="cn.edu.nju.nowcode.vo.MessageVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="from_id" jdbcType="VARCHAR" property="fromId" />
    <result column="to_id" jdbcType="VARCHAR" property="toId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="conversation_id" jdbcType="VARCHAR" property="conversationId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.nju.nowcode.vo.MessageVO">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, from_id, to_id, create_time, conversation_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>

  <select id="selectByUser" resultMap="BaseResultMap">
    select * from (select * from message where to_id=#{toId} order by create_time desc limit 10000) user_message group by conversation_id
     order by create_time desc limit #{offset},#{limit}
  </select>

  <select id="selectByConversation" resultMap="BaseResultMap">
    select * from message where conversation_id=#{conversationId} order by id desc limit #{offset},#{limit}
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    where id = #{id,jdbcType=BIGINT}
  </select>

  <insert id="insertSelective" parameterType="cn.edu.nju.nowcode.vo.MessageVO">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fromId != null">
        from_id,
      </if>
      <if test="toId != null">
        to_id,
      </if>
      <if test="conversationId != null">
        conversation_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fromId != null">
        #{fromId,jdbcType=BIGINT},
      </if>
      <if test="toId != null">
        #{toId,jdbcType=BIGINT},
      </if>
      <if test="conversationId != null">
        #{conversationId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateHasRead">
    UPDATE message set has_read=#{hasRead} WHERE id=#{id}
  </update>
</mapper>