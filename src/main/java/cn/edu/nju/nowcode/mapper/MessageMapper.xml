<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.nju.nowcode.mapper.MessageMapper">
  <resultMap id="BaseResultMap" type="cn.edu.nju.nowcode.vo.MessageVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="from_id" jdbcType="BIGINT" property="fromId" />
    <result column="to_id" jdbcType="BIGINT" property="toId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="conversation_id" jdbcType="BIGINT" property="conversationId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.edu.nju.nowcode.vo.MessageVO">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, from_id, to_id, create_time, conversation_id
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from message
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.edu.nju.nowcode.vo.MessageVO">
    insert into message (id, from_id, to_id, 
      create_time, conversation_id, content
      )
    values (#{id,jdbcType=BIGINT}, #{fromId,jdbcType=BIGINT}, #{toId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{conversationId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.nju.nowcode.vo.MessageVO">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fromId != null">
        from_id,
      </if>
      <if test="toId != null">
        to_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="conversationId != null">
        conversation_id,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fromId != null">
        #{fromId,jdbcType=BIGINT},
      </if>
      <if test="toId != null">
        #{toId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="conversationId != null">
        #{conversationId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.nju.nowcode.vo.MessageVO">
    update message
    <set>
      <if test="fromId != null">
        from_id = #{fromId,jdbcType=BIGINT},
      </if>
      <if test="toId != null">
        to_id = #{toId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="conversationId != null">
        conversation_id = #{conversationId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.edu.nju.nowcode.vo.MessageVO">
    update message
    set from_id = #{fromId,jdbcType=BIGINT},
      to_id = #{toId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      conversation_id = #{conversationId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.nju.nowcode.vo.MessageVO">
    update message
    set from_id = #{fromId,jdbcType=BIGINT},
      to_id = #{toId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      conversation_id = #{conversationId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>